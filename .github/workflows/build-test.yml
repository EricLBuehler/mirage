name: "Build Test"

on:
  pull_request:
  push:
    branches:
      - main
      - ci

concurrency:
  group: build-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Free space on runner
        run: .github/workflows/helpers/free_space_on_runner.sh

      - name: Install CUDA
        uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: "12.1.1"
          use-github-cache: "false"

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y software-properties-common lsb-release wget python3-pip g++ make libboost-all-dev

          CMAKE_VERSION=3.27.0
          wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh
          sudo mkdir -p /opt/cmake && sudo sh cmake.sh --skip-license --prefix=/opt/cmake
          sudo ln -sf /opt/cmake/bin/cmake /usr/local/bin/cmake

          pip3 install --upgrade cython

          # Install cuDNN 9
          UBUNTU_VERSION=$(lsb_release -rs | tr -d '.')
          wget -c -q "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu${UBUNTU_VERSION}/x86_64/cuda-keyring_1.1-1_all.deb"
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          sudo apt update -y
          rm -f cuda-keyring_1.1-1_all.deb
          sudo apt-get install -y libcudnn9-cuda-12 libcudnn9-dev-cuda-12 libcudnn9-samples
          sudo ldconfig

      - name: Build Z3 from Source
        run: |
          export MIRAGE_ROOT=${{ github.workspace }}
          cd $MIRAGE_ROOT/deps/z3
          mkdir -p build && cd build
          cmake ..
          make -j$(nproc)
          echo "Z3_DIR=$MIRAGE_ROOT/deps/z3/build" >> $GITHUB_ENV

      - name: Build Mirage from Source
        run: |
          export MIRAGE_ROOT=${{ github.workspace }}
          cd $MIRAGE_ROOT
          mkdir -p build && cd build
          cmake ..
          make -j$(nproc)
          make install
